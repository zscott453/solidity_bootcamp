/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Ballot, BallotInterface } from "../Ballot";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proposalNames",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerName",
    outputs: [
      {
        internalType: "bytes32",
        name: "winnerName_",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "winningProposal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161070b38038061070b8339818101604052810190610032919061026c565b60005b81518110156100c2576000604051806040016040528084848151811061005e5761005d6102b5565b5b60200260200101518152602001600081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505080806100ba9061031d565b915050610035565b5050610365565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61012b826100e2565b810181811067ffffffffffffffff8211171561014a576101496100f3565b5b80604052505050565b600061015d6100c9565b90506101698282610122565b919050565b600067ffffffffffffffff821115610189576101886100f3565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6101b28161019f565b81146101bd57600080fd5b50565b6000815190506101cf816101a9565b92915050565b60006101e86101e38461016e565b610153565b9050808382526020820190506020840283018581111561020b5761020a61019a565b5b835b81811015610234578061022088826101c0565b84526020840193505060208101905061020d565b5050509392505050565b600082601f830112610253576102526100dd565b5b81516102638482602086016101d5565b91505092915050565b600060208284031215610282576102816100d3565b5b600082015167ffffffffffffffff8111156102a05761029f6100d8565b5b6102ac8482850161023e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061032882610313565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361035a576103596102e4565b5b600182019050919050565b610397806103746000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f14610051578063013cf08b1461006d578063609ff1bd1461009e578063e2ba53f0146100bc575b600080fd5b61006b60048036038101906100669190610207565b6100da565b005b61008760048036038101906100829190610207565b6100dd565b60405161009592919061025c565b60405180910390f35b6100a6610111565b6040516100b39190610285565b60405180910390f35b6100c4610199565b6040516100d191906102a0565b60405180910390f35b50565b600081815481106100ed57600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b6000806000905060005b60008054905081101561019457816000828154811061013d5761013c6102bb565b5b90600052602060002090600202016001015411156101815760008181548110610169576101686102bb565b5b90600052602060002090600202016001015491508092505b808061018c90610319565b91505061011b565b505090565b6000806101a4610111565b815481106101b5576101b46102bb565b5b906000526020600020906002020160000154905090565b600080fd5b6000819050919050565b6101e4816101d1565b81146101ef57600080fd5b50565b600081359050610201816101db565b92915050565b60006020828403121561021d5761021c6101cc565b5b600061022b848285016101f2565b91505092915050565b6000819050919050565b61024781610234565b82525050565b610256816101d1565b82525050565b6000604082019050610271600083018561023e565b61027e602083018461024d565b9392505050565b600060208201905061029a600083018461024d565b92915050565b60006020820190506102b5600083018461023e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610324826101d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610356576103556102ea565b5b60018201905091905056fea2646970667358221220a672191104932eddddc539bb2e6c5ab391a3396a0fb8160251fae9a5bd63cae064736f6c63430008110033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    proposalNames: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Ballot> {
    return super.deploy(proposalNames, overrides || {}) as Promise<Ballot>;
  }
  override getDeployTransaction(
    proposalNames: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(proposalNames, overrides || {});
  }
  override attach(address: string): Ballot {
    return super.attach(address) as Ballot;
  }
  override connect(signer: Signer): Ballot__factory {
    return super.connect(signer) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new utils.Interface(_abi) as BallotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ballot {
    return new Contract(address, _abi, signerOrProvider) as Ballot;
  }
}
